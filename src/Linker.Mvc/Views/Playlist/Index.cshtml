@using Microsoft.AspNetCore.Http
@using Linker.Core.V2.Models
@using System.Security.Claims
@inject IHttpContextAccessor httpContextAccessor
@model IEnumerable<Playlist>
@{
    ViewData["Title"] = "Playlist";
    var playlistCounts = Model.Count();
    var httpContext = httpContextAccessor.HttpContext;
    var isLoggedIn = httpContext?.User.Identity?.IsAuthenticated ?? false;
    var userId = httpContext?.User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
}

<partial name="_Notification" />

<a asp-action="Create">+</a>

@if (Model.Any())
{
    var counter = 1;
    @foreach (var playlist in Model)
    {
        <div class="border border-solid border-black rounded p-4">
            <p>Index: @(counter++)</p>
            <p>@playlist.Id</p>
            <p>@playlist.Name</p>
            <p>@playlist.Description</p>
            <p>@playlist.Visibility.ToString()</p>
            <p>@playlist.CreatedAt.ToLongTimeString()</p>
            <p>@playlist.ModifiedAt.ToLongTimeString()</p>
            <a class="bg-black p-2 rounded-lg text-white" asp-action="Details" asp-route-id="@playlist.Id">Details</a>
            <a class="bg-black p-2 rounded-lg text-white" asp-action="Edit" asp-route-id="@playlist.Id">Edit</a>
            @if(userId.Equals(playlist.OwnerId, StringComparison.OrdinalIgnoreCase))
            {
                <form method="post" asp-action="Delete" asp-route-id="@playlist.Id" class="block">
                    <button
                        class="border rounded border-solid border-gray-400 block px-4 py-2 hover:bg-gray-100 transition-colors duration-200"
                        onclick="return confirm('Are you sure to delete this playlist?')"
                    >
                        Delete
                    </button>
                </form>
            }
        </div>
    }
}
else
{
    <p>No playlist for now.</p>
    <button>Create a new playlist.</button>
}

